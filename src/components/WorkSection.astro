---
import WorkCard from "./WorkCard.astro"

---

<div id="work-section" class="work-section bg-neutral-800 py-6 px-6 rounded-xl transition-all duration-500 mx-auto" style="max-width: 100%;">
  <h2 style="font-family: 'Satoshi', sans-serif;" class="text-4xl md:text-8xl font-semibold text-white mb-6">Work & Studies</h2>
  <div class="grid grid-cols-1 gap-6">
    
    <WorkCard 
      title="Gathr: A Social Meetup App" 
      description="A brief description of project two." 
      image="/images/Banner_Gathr_Portfolio.webp" 
      link="/work/gathr" 
    />
    <!-- 
    <WorkCard 
      title="Wonnda: B2B Onboarding System" 
      description="This project aimed to design an intuitive onboarding system for a B2B platform, featuring a dual registration flow for suppliers and manufacturers to ensure a smooth and user-friendly entry process." 
      image="https://placehold.co/800x400/f3f4f6/6b7280?text=Project+One" 
      link="/projects/project-one" 
    />
    <WorkCard 
      title="Project Three" 
      description="A brief description of project three." 
      image="https://placehold.co/800x400/f3f4f6/6b7280?text=Project+Three" 
      link="/projects/project-three" 
    /> -->
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const section = document.getElementById("work-section");

    function updateSectionWidth() {
      const isMobile = window.innerWidth < 768; // md breakpoint
      
      const observer = new IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              // Mobile: weniger dramatische Veränderung, Desktop: wie vorher
              section.style.maxWidth = isMobile ? "95%" : "90%";
            } else {
              section.style.maxWidth = "100%";
            }
          });
        },
        { 
          threshold: isMobile ? 0.1 : 0.3, // Mobile: früher triggern
          rootMargin: isMobile ? '0px 0px -50px 0px' : '0px' // Mobile: etwas Offset
        }
      );

      // Cleanup previous observer if exists
      if (section.currentObserver) {
        section.currentObserver.disconnect();
      }
      
      section.currentObserver = observer;
      observer.observe(section);
    }

    // Initial setup
    updateSectionWidth();

    // Update on window resize
    let resizeTimeout;
    window.addEventListener('resize', () => {
      clearTimeout(resizeTimeout);
      resizeTimeout = setTimeout(updateSectionWidth, 150);
    });
  });
</script>