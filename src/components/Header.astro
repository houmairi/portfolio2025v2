---
import { Copy, Check, Menu, X } from '@lucide/astro';
---

<div id="navbar" class="header sticky top-0 z-40 backdrop-blur bg-white/20 transition-transform duration-300">
  <nav class="flex items-center justify-between py-4">
    <a href="/" style="font-family: 'Satoshi', sans-serif;" class="text-xl font-medium text-neutral-800">niko tunjic</a>
    
    <!-- Desktop Nav -->
    <div class="hidden md:flex space-x-6">
      <a href="/work" style="font-family: 'Satoshi', sans-serif;" class="text-neutral-800 text-xl font-medium hover:text-neutral-600 transition-colors">work</a>
      <a href="/#about" style="font-family: 'Satoshi', sans-serif;" class="text-neutral-800 text-xl font-medium hover:text-neutral-600 transition-colors">about</a>
      <a href="/assets/Tunjic_Niko_CV_EN.pdf" style="font-family: 'Satoshi', sans-serif;" class="text-neutral-800 text-xl font-medium hover:text-neutral-600 transition-colors">cv</a>
    </div>
    
    <!-- Desktop Email Copy Button -->
    <div class="hidden md:flex items-center space-x-2 bg-neutral-800 hover:bg-neutral-700 transition-colors px-4 py-2 rounded-3xl cursor-pointer group" id="copyEmailBtn">
      <span style="font-family: 'Satoshi', sans-serif;" class="text-white text-lg font-medium">niko@tunjic.at</span>
      <Copy stroke-width="3" class="text-white w-4 h-4 group-hover:scale-110 transition-transform" id="copyIcon" />
      <Check stroke-width="3" class="text-white w-4 h-4 hidden" id="checkIcon" />
    </div>

    <!-- Mobile Menu Button -->
    <button id="mobileMenuBtn" class="md:hidden p-2 rounded-lg hover:bg-neutral-100 transition-colors relative z-50">
      <Menu class="w-6 h-6 text-neutral-800" id="menuIcon" />
      <X class="w-6 h-6 text-neutral-800 hidden" id="closeIcon" />
    </button>
  </nav>
</div>

<!-- Mobile Menu Overlay -->
<div id="mobileMenu" class="fixed inset-0 bg-white md:hidden transform translate-x-full transition-transform duration-300 ease-in-out" style="z-index: 45;">
  <div class="flex flex-col h-full">
    <!-- Mobile Menu Header -->
    <div class="flex items-center justify-between py-4 px-4">
      <span style="font-family: 'Satoshi', sans-serif;" class="text-xl font-medium text-neutral-800">menu</span>
      <button id="closeMobileMenu" class="p-2 rounded-lg hover:bg-neutral-100 transition-colors">
        <X class="w-6 h-6 text-neutral-800" />
      </button>
    </div>

    <!-- Mobile Menu Links -->
    <div class="flex-1 flex flex-col justify-center space-y-8 px-8">
      <a href="/work" style="font-family: 'Satoshi', sans-serif;" class="mobile-nav-link text-4xl font-medium text-neutral-800 hover:text-neutral-600 transition-colors py-4">
        work
      </a>
      <a href="/#about" style="font-family: 'Satoshi', sans-serif;" class="mobile-nav-link text-4xl font-medium text-neutral-800 hover:text-neutral-600 transition-colors py-4">
        about
      </a>
      <a href="/assets/Tunjic_Niko_CV_EN.pdf" style="font-family: 'Satoshi', sans-serif;" class="mobile-nav-link text-4xl font-medium text-neutral-800 hover:text-neutral-600 transition-colors py-4">
        cv
      </a>
    </div>

    <!-- Mobile Email Section -->
    <div class="px-8 pb-12">
      <div class="bg-neutral-800 hover:bg-neutral-700 transition-colors px-6 py-4 rounded-2xl cursor-pointer group w-full" id="copyEmailBtnMobile">
        <div class="flex items-center justify-between">
          <div class="flex-1">
            <p style="font-family: 'Satoshi', sans-serif;" class="text-white text-sm font-medium mb-1">Get in touch</p>
            <p style="font-family: 'Satoshi', sans-serif;" class="text-white text-lg font-medium">niko@tunjic.at</p>
          </div>
          <div class="flex items-center ml-4">
            <Copy stroke-width="3" class="text-white w-5 h-5 group-hover:scale-110 transition-transform" id="copyIconMobile" />
            <Check stroke-width="3" class="text-white w-5 h-5 hidden" id="checkIconMobile" />
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const email = 'niko@tunjic.at';
    
    // Desktop Elements
    const copyBtn = document.getElementById('copyEmailBtn');
    const copyIcon = document.getElementById('copyIcon');
    const checkIcon = document.getElementById('checkIcon');
    
    // Mobile Elements
    const mobileMenuBtn = document.getElementById('mobileMenuBtn');
    const mobileMenu = document.getElementById('mobileMenu');
    const closeMobileMenu = document.getElementById('closeMobileMenu');
    const menuIcon = document.getElementById('menuIcon');
    const closeIcon = document.getElementById('closeIcon');
    const copyBtnMobile = document.getElementById('copyEmailBtnMobile');
    const copyIconMobile = document.getElementById('copyIconMobile');
    const checkIconMobile = document.getElementById('checkIconMobile');
    const mobileNavLinks = document.querySelectorAll('.mobile-nav-link');

    // Mobile Menu Functions
    function openMobileMenu() {
      if (mobileMenu) {
        // Show menu
        mobileMenu.classList.remove('translate-x-full');
        mobileMenu.classList.add('translate-x-0');
        
        // Update button icons
        if (menuIcon && closeIcon) {
          menuIcon.classList.add('hidden');
          closeIcon.classList.remove('hidden');
        }
        
        // Prevent body scroll
        document.body.style.overflow = 'hidden';
        document.documentElement.style.overflow = 'hidden';
      }
    }

    function closeMobileMenuFn() {
      if (mobileMenu) {
        // Hide menu
        mobileMenu.classList.add('translate-x-full');
        mobileMenu.classList.remove('translate-x-0');
        
        // Update button icons
        if (menuIcon && closeIcon) {
          menuIcon.classList.remove('hidden');
          closeIcon.classList.add('hidden');
        }
        
        // Restore body scroll
        document.body.style.overflow = '';
        document.documentElement.style.overflow = '';
      }
    }

    // Copy Email Functions
    async function copyEmail(isMobile = false) {
      const copyIconEl = isMobile ? copyIconMobile : copyIcon;
      const checkIconEl = isMobile ? checkIconMobile : checkIcon;
      
      if (!copyIconEl || !checkIconEl) return;
      
      try {
        await navigator.clipboard.writeText(email);
        
        copyIconEl.classList.add('hidden');
        checkIconEl.classList.remove('hidden');
        
        setTimeout(() => {
          checkIconEl.classList.add('hidden');
          copyIconEl.classList.remove('hidden');
        }, 3000);
        
      } catch (err) {
        console.error('Failed to copy email: ', err);
        // Fallback for older browsers
        const textArea = document.createElement('textarea');
        textArea.value = email;
        document.body.appendChild(textArea);
        textArea.select();
        try {
          document.execCommand('copy');
          copyIconEl.classList.add('hidden');
          checkIconEl.classList.remove('hidden');
          setTimeout(() => {
            checkIconEl.classList.add('hidden');
            copyIconEl.classList.remove('hidden');
          }, 3000);
        } catch (fallbackErr) {
          console.error('Fallback copy failed: ', fallbackErr);
        }
        document.body.removeChild(textArea);
      }
    }

    // Event Listeners
    if (mobileMenuBtn) {
      mobileMenuBtn.addEventListener('click', (e) => {
        e.preventDefault();
        e.stopPropagation();
        openMobileMenu();
      });
    }
    
    if (closeMobileMenu) {
      closeMobileMenu.addEventListener('click', (e) => {
        e.preventDefault();
        e.stopPropagation();
        closeMobileMenuFn();
      });
    }
    
    if (copyBtn) {
      copyBtn.addEventListener('click', () => copyEmail(false));
    }
    
    if (copyBtnMobile) {
      copyBtnMobile.addEventListener('click', () => copyEmail(true));
    }
    
    // Close menu when clicking on links
    mobileNavLinks.forEach(link => {
      link.addEventListener('click', () => {
        // Small delay to allow navigation to start
        setTimeout(closeMobileMenuFn, 100);
      });
    });

    // Close menu on escape key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
        closeMobileMenuFn();
      }
    });

    // Close menu when clicking outside (on overlay)
    if (mobileMenu) {
      mobileMenu.addEventListener('click', (e) => {
        if (e.target === mobileMenu) {
          closeMobileMenuFn();
        }
      });
    }

    // Hide/Show navbar on scroll
    let lastScroll = 0;
    const nav = document.getElementById('navbar');

    window.addEventListener('scroll', () => {
      const currentScroll = window.pageYOffset;

      if (currentScroll <= 0) {
        if (nav) nav.style.transform = 'translateY(0)';
        return;
      }

      if (currentScroll > lastScroll && currentScroll > 100) {
        // Scrolling down & past threshold
        if (nav) nav.style.transform = 'translateY(-100%)';
      } else {
        // Scrolling up
        if (nav) nav.style.transform = 'translateY(0)';
      }

      lastScroll = currentScroll;
    });

    // Handle page visibility changes
    document.addEventListener('visibilitychange', () => {
      if (document.hidden) {
        closeMobileMenuFn();
      }
    });

    // Handle resize events
    window.addEventListener('resize', () => {
      if (window.innerWidth >= 768) { // md breakpoint
        closeMobileMenuFn();
      }
    });
  });
</script>